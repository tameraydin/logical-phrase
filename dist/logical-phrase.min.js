/**
 * logical-phrase v0.1.3 (https://github.com/tameraydin/logical-phrase)
 * Copyright 2015 Tamer Aydin (http://tamerayd.in)
 * Licensed under MIT (http://tameraydin.mit-license.org/)
 */
(function(){"use strict";function e(e,t,r){if(e.levelWrappers[r]){var i=e.levelWrappers[r].replace(" /",""),n=i.split(" ")[0];n=n.replace("<","</"),">"!==n[n.length-1]&&(n+=">"),t=i+t+n}return t}function t(e,t,r){var n=i[t];return t&&(!r||r.indexOf(n)>-1)?e[n]+" ":e.truthy?e.truthy+" ":""}function r(i,n,o){o=o||0;for(var s=[],f="",a=0;a<n.items.length;a++){var u=n.items[a];(0===o||0!==a)&&(f=t(i,u.operator,["falsy"])),u.value&&s.push(f+u.value+" "),u.items&&s.push(f+r(i,u,o+1)+" ")}return(i.prefix&&0===o?i.prefix+" ":"")+e(i,s.join(t(i,n.operator)).replace(/^\s+|\s+$/g,""),o)}var i={AND:"and",OR:"or",NOT:"falsy"},n=function(){this.prefix="",this.and="AND",this.or="OR",this.truthy="",this.falsy="NOT",this.levelWrappers=[]};n.prototype={configure:function(e){for(var t in e)"undefined"!=typeof this[t]&&(this[t]=e[t])},generateBy:function(e){return r(this,e)}};var o=this;"undefined"!=typeof exports&&"undefined"!=typeof module&&module.exports?module.exports=n:"function"==typeof define&&define.amd?define("LogicalPhrase",[],function(){return n}):o.LogicalPhrase=n}).call(this);